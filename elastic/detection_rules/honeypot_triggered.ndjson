{
  "id": "6929e8cf-2c06-42c8-81d2-3dcb676809e0",
  "name": "Faitour HoneyPot Trigger Detected",
  "tags": [
    "Faitour",
    "HoneyPot"
  ],
  "interval": "5m",
  "enabled": true,
  "revision": 2,
  "description": "This alert is to notify when a trigger has fired on an Faitour honeypot server. This may indicate a port scan, an attempt to enumerate the device, or active attempts to connect to the spoofed services. Alerts are grouped by source IP, honeypot service, and host name to reduce noise. Be sure to investigate all events from the source IP noted in these alerts. ",
  "risk_score": 47,
  "severity": "medium",
  "note": "## 1. Initial Alert Review\n\n**Notification**:  Start by reviewing the alert or notification generated by the honeypot. This could be an email alert, a dashboard notification, or any other form of alert indicating suspicious activity.\n\n**Timestamp**:  Note the exact time and date of the trigger. This timestamp will be crucial for correlating with other logs and events.\n\n## 2. Honeypot Configuration Check\n\n**Configuration Details**:  Understand the configuration specifics of your honeypot. This includes the services, ports, and protocols it emulates or monitors.\n\n**Logging Settings**:  Review the logging settings of the honeypot to ensure all relevant information is being captured. Adjust settings if necessary to capture more detailed logs.\n\n## 3. Log Analysis\n\n**Access Logs**:  Analyze the access logs around the time of the trigger. Look for IP addresses, URLs accessed, commands executed, and any other relevant activities.\n\n**Command History**:  If applicable, review the command history logs to understand what actions were taken by the attacker within the honeypot.\n\n## 4. Network Traffic Examination\n\n**Network Logs**:  Analyze network traffic logs captured during the incident. Look for connections to and from the honeypot, especially on unusual ports or protocols.\n\n**Packet Capture**:  If possible, perform a packet capture to inspect the actual data exchanged during the incident. This can provide deeper insights into the attacker’s activities.\n\n## 5. Forensic Analysis\n\n**File System**:  Examine the file system of the honeypot for any changes or additions made by the attacker. Look for new files, modified files, or suspicious executables.\n\n**Memory Dump**:  Consider analyzing a memory dump of the honeypot to identify running processes, injected code, or other signs of compromise.\n\n## 6. Behavioral Analysis\n\n**Attack Patterns**:  Identify the specific tactics and techniques used by the attacker. This could include scanning, brute-force attempts, exploitation of vulnerabilities, etc.\n\n**Pattern Recognition**:  Look for patterns in the attacker’s behavior or IP addresses used, which could indicate automated tools, known malicious actors, or targeted attacks.\n\n## 7. Attribution and Intent\n\n**Attribution**:  While challenging, attempt to attribute the attack to specific threat actors or groups based on tactics, techniques, and indicators of compromise (IOCs).\n\n**Intent**:  Analyze the attacker’s likely goals. Determine if they were probing for vulnerabilities, attempting data exfiltration, or testing defenses.\n\n## 8. Documentation and Reporting\n\n**Detailed Report**:  Document all findings from the investigation, including logs, network captures, forensic analysis results, and conclusions drawn.\n\n**Recommendations**:  Provide actionable recommendations for improving defenses based on the findings. This might include patching vulnerabilities, enhancing monitoring, or revising incident response procedures.\n\n## 9. Incident Response\n\n**Containment and Mitigation**:  If the attacker accessed sensitive systems or data, initiate incident response procedures to contain and mitigate potential impacts.\n\n**Communication**:  Keep stakeholders informed throughout the investigation and response process, including IT teams, management, and potentially legal and regulatory entities.\n\n## 10. Post-Investigation Actions\n\n**Lessons Learned**:  Conduct a post-mortem analysis to identify lessons learned from the incident. Use these insights to enhance future honeypot deployments and overall security posture.\n\n**Continuous Improvement**:  Update defenses, detection rules, and response protocols based on the investigation’s findings to better defend against future attacks.",
  "license": "",
  "output_index": "",
  "meta": {
    "from": "4m",
    "kibana_siem_app_url": "https://elastic.appliedmed.com/s/information-security/app/security"
  },
  "timestamp_override": "event.ingested",
  "timestamp_override_fallback_disabled": false,
  "author": [
    "MakoWish"
  ],
  "false_positives": [
    "Network scanners such as Tenable, ServiceNow, and others will likely trigger this rule and may be whitelisted."
  ],
  "from": "now-540s",
  "rule_id": "ef696e01-1eb1-42b1-b6a4-01b909e8493b",
  "max_signals": 100,
  "risk_score_mapping": [
  ],
  "severity_mapping": [
  ],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0007",
        "name": "Discovery",
        "reference": "https://attack.mitre.org/tactics/TA0007"
      },
      "technique": [
        {
          "id": "T1083",
          "name": "File and Directory Discovery",
          "reference": "https://attack.mitre.org/techniques/T1083",
          "subtechnique": [
          ]
        },
        {
          "id": "T1135",
          "name": "Network Share Discovery",
          "reference": "https://attack.mitre.org/techniques/T1135",
          "subtechnique": [
          ]
        }
      ]
    },
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0043",
        "name": "Reconnaissance",
        "reference": "https://attack.mitre.org/tactics/TA0043"
      },
      "technique": [
        {
          "id": "T1595",
          "name": "Active Scanning",
          "reference": "https://attack.mitre.org/techniques/T1595",
          "subtechnique": [
          ]
        }
      ]
    }
  ],
  "to": "now",
  "references": [
  ],
  "version": 1,
  "rule_source": {
    "type": "internal"
  },
  "related_integrations": [
  ],
  "required_fields": [
  ],
  "setup": "",
  "type": "eql",
  "language": "eql",
  "index": [
    "logs-faitour.log-*"
  ],
  "query": "any where \nevent.dataset == \"honeypot\" and\nevent.reason != \"SYN packet received\"",
  "filters": [
  ],
  "alert_suppression": {
    "group_by": [
      "host.name",
      "source.ip",
      "event.module"
    ],
    "missing_fields_strategy": "suppress"
  },
  "actions": []
}
